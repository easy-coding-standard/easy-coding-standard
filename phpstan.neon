parameters:
    level: 8

    reportUnmatchedIgnoredErrors: false

    # requires exact closure types
    checkMissingCallableSignature: true

    paths:
        - src
        - tests
        - ecs.php
        - rector.php

    excludePaths:
        # deprecated, to be removed
        - scoper.php

        # tests
        - '*/Source/*'
        - '*/Fixture/*'

    # see https://github.com/tomasVotruba/unused-public
    unused_public:
        methods: true
        properties: true
        constants: true

    # see https://github.com/TomasVotruba/type-coverage
    type_coverage:
        return: 99
        param: 94.4
        property: 99

    bootstrapFiles:
        - tests/bootstrap.php

    treatPhpDocTypesAsCertain: true

    ignoreErrors:
        # set above
        -
            path: src/Parallel/Application/ParallelFileProcessor.php
            message: '#Cannot call method (.*?)\(\) on Symplify\\EasyParallel\\ValueObject\\ProcessPool\|null#'

        - '#Method Symplify\\EasyCodingStandard\\Console\\Command\\ListCheckersCommand\:\:getObjectClasses\(\) should return (.*?)#'

        - '#Method Symplify\\EasyCodingStandard\\Application\\SingleFileProcessor\:\:processFilePath\(\) should return array\{file_diffs\?\: array<Symplify\\EasyCodingStandard\\ValueObject\\Error\\FileDiff>, coding_standard_errors\?\: array<Symplify\\EasyCodingStandard\\SniffRunner\\ValueObject\\Error\\CodingStandardError>\} but returns array<(.*?), array<Symplify\\EasyCodingStandard\\SniffRunner\\ValueObject\\Error\\CodingStandardError\|Symplify\\EasyCodingStandard\\ValueObject\\Error\\FileDiff>>#'

        - '#Method Symplify\\EasyCodingStandard\\FixerRunner\\Parser\\FileToTokensParser\:\:parseFromFilePath\(\) should return iterable<PhpCsFixer\\Tokenizer\\Token>&PhpCsFixer\\Tokenizer\\Tokens but returns PhpCsFixer\\Tokenizer\\Tokens#'

        # false positive on custom config tets
        -
            message: '#Missing call to parent\:\:setUp\(\) method#'
            paths:
                 - tests/Skipper/Skipper/Skipper/SkipperTest.php
                 - tests/Skipper/Skipper/Skip/SkipSkipperTest.php
                 - tests/Skipper/SkipCriteriaResolver/SkippedPathsResolver/SkippedPathsResolverTest.php
                 - tests/FixerRunner/Application/FileProcessorTest.ph
                 - src/Testing/PHPUnit/AbstractCheckerTestCase.php

        # optional
        -
            message: '#Method Symplify\\EasyCodingStandard\\Config\\ECSConfig\:\:singleton\(\) has parameter \$concrete with no signature specified for Closure#'
            path: src/Config/ECSConfig.php

        # testing instance of on purpose
        -
            message: '#Call to method PHPUnit\\Framework\\Assert\:\:assertInstanceOf#'
            path: tests/*

        # overly detailed
        - '#PHPDoc tag @var with type string\|false is not subtype of native type non\-empty\-string\|false#'

        # array validation on purpose
        - '#Call to static method Webmozart\\Assert\\Assert\:\:allString\(\) with (non-empty-array|list|array)<string> will always evaluate to true#'
        - '#Call to static method Webmozart\\Assert\\Assert\:\:allIsArray\(\) with array<class\-string<PHP_CodeSniffer\\Sniffs\\Sniff\|PhpCsFixer\\Fixer\\FixerInterface>, array<mixed>> will always evaluate to true#'

        # hack to autoload contants
        - '#Call to new PHP_CodeSniffer\\Util\\Tokens\(\) on a separate line has no effect#'
